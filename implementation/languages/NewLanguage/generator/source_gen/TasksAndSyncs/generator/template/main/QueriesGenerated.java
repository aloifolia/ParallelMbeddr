package TasksAndSyncs.generator.template.main;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.generator.template.PropertyMacroContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.generator.template.WeavingMappingRuleContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.generator.template.MappingScriptContext;
import java.util.List;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.generator.template.TemplateQueryContextWithMacro;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.typesystem.inference.TypeChecker;
import com.mbeddr.core.udt.behavior.SUDeclaration_Behavior;

@Generated
public class QueriesGenerated {
  public static Object propertyMacro_GetPropertyValue_2744793885340541565(final IOperationContext operationContext, final PropertyMacroContext _context) {
    System.out.println("woven!");
    return _context.createUniqueName(_context.getTemplateValue(), null);
  }

  public static SNode weaving_MappingRule_ContextNodeQuery_2744793885335880553(final IOperationContext operationContext, final WeavingMappingRuleContext _context) {
    return SNodeOperations.getAncestor(_context.getNode(), "com.mbeddr.core.modules.structure.ImplementationModule", false, false);
  }

  public static void mappingScript_CodeBlock_8801852084532547317(final IOperationContext operationContext, final MappingScriptContext _context) {
    List<SNode> tasks = SModelOperations.getNodes(_context.getModel(), "TasksAndSyncs.structure.Future");
    for (SNode task : ListSequence.fromList(tasks)) {
      // TODO: remove node 
      final SNode threadVarName = new _FunctionTypes._return_P0_E0<SNode>() {
        public SNode invoke() {
          SNode node_2744793885340947130 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.StringLiteral", null);
              SPropertyOperations.set(res, "value", (_context.createUniqueName("task_", null)));
              return res;
            }
          }.invoke();
          return node_2744793885340947130;
        }
      }.invoke();
      SNode embeddingStatement = SNodeOperations.getAncestor(task, "com.mbeddr.core.statements.structure.Statement", false, false);
      SNode threadDeclaration = new _FunctionTypes._return_P0_E0<SNode>() {
        public SNode invoke() {
          final SNode node_2744793885340947150 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.AbritraryTextItem", null);
              SPropertyOperations.set(res, "text", ("pthread_t"));
              return res;
            }
          }.invoke();
          final SNode node_2744793885340947149 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.ArbitraryTextType", null);
              SPropertyOperations.set(res, "requiredStdHeader", ("<pthread.h>"));
              ListSequence.fromList(SLinkOperations.getTargets(res, "items", true)).addElement(node_2744793885340947150);
              return res;
            }
          }.invoke();
          SNode node_2744793885340947148 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.LocalVariableDeclaration", null);
              SPropertyOperations.set(res, "name", (SPropertyOperations.getString(threadVarName, "value")));
              SLinkOperations.setTarget(res, "type", node_2744793885340947149, true);
              return res;
            }
          }.invoke();
          return node_2744793885340947148;
        }
      }.invoke();

      SNodeOperations.insertPrevSiblingChild(embeddingStatement, threadDeclaration);

      SPropertyOperations.set(task, "variableName", SPropertyOperations.getString(threadVarName, "value"));
    }
  }

  public static SNode insertMacro_Query_2744793885329335734(final IOperationContext operationContext, final TemplateQueryContextWithMacro _context) {
    //  some preparation 
    SNode embeddingStatement = SNodeOperations.getAncestor(_context.getNode(), "com.mbeddr.core.statements.structure.Statement", false, false);
    final SNode module = SNodeOperations.getAncestor(_context.getNode(), "com.mbeddr.core.modules.structure.ImplementationModule", false, false);
    final SNode voidPointerType = new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_2744793885340947200 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.VoidType", null);
            return res;
          }
        }.invoke();
        SNode node_2744793885340947198 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.pointers.structure.PointerType", null);
            SLinkOperations.setTarget(res, "baseType", node_2744793885340947200, true);
            return res;
          }
        }.invoke();
        return node_2744793885340947198;
      }
    }.invoke();
    // build a struct declaration for the variable references 
    final SNode argsStructDeclaration = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.StructDeclaration", null);
    ListSequence.fromList(SLinkOperations.getTargets(module, "contents", true)).addElement(argsStructDeclaration);
    SPropertyOperations.set(argsStructDeclaration, "name", _context.createUniqueName("Args", module));
    for (SNode localVariableDeclaration : ListSequence.fromList(SNodeOperations.getDescendants(_context.getNode(), "com.mbeddr.core.statements.structure.LocalVarRef", false, new String[]{})).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return (SLinkOperations.getTarget(it, "var", false) != null);
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SLinkOperations.getTarget(it, "var", false);
      }
    })) {
      SNode member = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.Member", null);
      SPropertyOperations.set(member, "name", SPropertyOperations.getString(localVariableDeclaration, "name"));
      SLinkOperations.setTarget(member, "type", SNodeOperations.copyNode(SLinkOperations.getTarget(localVariableDeclaration, "type", true)), true);
      ListSequence.fromList(SLinkOperations.getTargets(argsStructDeclaration, "members", true)).addElement(member);
    }
    // build a function declaration for the parallelized expression 
    final SNode functionDeclaration = SConceptOperations.createNewNode("com.mbeddr.core.modules.structure.Function", null);
    ListSequence.fromList(SLinkOperations.getTargets(module, "contents", true)).addElement(functionDeclaration);
    SPropertyOperations.set(functionDeclaration, "name", _context.createUniqueName("par", module));
    SLinkOperations.setTarget(functionDeclaration, "type", new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_2744793885340947295 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.VoidType", null);
            return res;
          }
        }.invoke();
        SNode node_2744793885340947293 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.pointers.structure.PointerType", null);
            SLinkOperations.setTarget(res, "baseType", node_2744793885340947295, true);
            return res;
          }
        }.invoke();
        return node_2744793885340947293;
      }
    }.invoke(), true);
    ListSequence.fromList(SLinkOperations.getTargets(functionDeclaration, "arguments", true)).addElement(new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_2744793885340947313 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SNodeOperations.copyNode(voidPointerType);
            return res;
          }
        }.invoke();
        SNode node_2744793885340947307 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.modules.structure.Argument", null);
            SPropertyOperations.set(res, "name", (_context.createUniqueName("voidArgs", null)));
            SLinkOperations.setTarget(res, "type", node_2744793885340947313, true);
            return res;
          }
        }.invoke();
        return node_2744793885340947307;
      }
    }.invoke());
    // add statement: T* args = (T*) argsVoid; 
    final SNode structPointerType = new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_2744793885340947326 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.StructType", null);
            SLinkOperations.setTarget(res, "struct", argsStructDeclaration, false);
            return res;
          }
        }.invoke();
        SNode node_2744793885340947324 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.pointers.structure.PointerType", null);
            SLinkOperations.setTarget(res, "baseType", node_2744793885340947326, true);
            return res;
          }
        }.invoke();
        return node_2744793885340947324;
      }
    }.invoke();
    final SNode argsCastDecl = new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_2744793885340947339 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SNodeOperations.copyNode(structPointerType);
            return res;
          }
        }.invoke();
        final SNode node_2744793885340947346 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SNodeOperations.copyNode(structPointerType);
            return res;
          }
        }.invoke();
        final SNode node_2744793885340947351 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.modules.structure.ArgumentRef", null);
            SLinkOperations.setTarget(res, "arg", ListSequence.fromList(SLinkOperations.getTargets(functionDeclaration, "arguments", true)).first(), false);
            return res;
          }
        }.invoke();
        final SNode node_2744793885340947344 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.CastExpression", null);
            SLinkOperations.setTarget(res, "targetType", node_2744793885340947346, true);
            SLinkOperations.setTarget(res, "expr", node_2744793885340947351, true);
            return res;
          }
        }.invoke();
        SNode node_2744793885340947334 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.LocalVariableDeclaration", null);
            SPropertyOperations.set(res, "name", (_context.createUniqueName("args", null)));
            SLinkOperations.setTarget(res, "type", node_2744793885340947339, true);
            SLinkOperations.setTarget(res, "init", node_2744793885340947344, true);
            return res;
          }
        }.invoke();
        return node_2744793885340947334;
      }
    }.invoke();
    ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(functionDeclaration, "body", true), "statements", true)).addElement(argsCastDecl);
    // add statement: T* result = malloc(sizeof T);  
    final SNode resultDeclaration = new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_2744793885340947383 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SNodeOperations.copyNode(SLinkOperations.getTarget(SNodeOperations.cast(TypeChecker.getInstance().getTypeOf(_context.getNode()), "TasksAndSyncs.structure.TaskType"), "returnType", true));
            return res;
          }
        }.invoke();
        final SNode node_2744793885340947381 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.pointers.structure.PointerType", null);
            SLinkOperations.setTarget(res, "baseType", node_2744793885340947383, true);
            return res;
          }
        }.invoke();
        final SNode node_2744793885340947395 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.AbritraryTextItem", null);
            SPropertyOperations.set(res, "text", ("malloc(sizeof "));
            return res;
          }
        }.invoke();
        final SNode node_2744793885340947401 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SNodeOperations.copyNode(SLinkOperations.getTarget(SNodeOperations.cast(TypeChecker.getInstance().getTypeOf(_context.getNode()), "TasksAndSyncs.structure.TaskType"), "returnType", true));
            return res;
          }
        }.invoke();
        final SNode node_2744793885340947399 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.AnyNodeItem", null);
            SLinkOperations.setTarget(res, "theNode", node_2744793885340947401, true);
            return res;
          }
        }.invoke();
        final SNode node_2744793885340947410 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.AbritraryTextItem", null);
            SPropertyOperations.set(res, "text", (")"));
            return res;
          }
        }.invoke();
        final SNode node_2744793885340947392 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.ArbitraryTextExpression", null);
            SPropertyOperations.set(res, "requiredStdHeader", ("<stdlib.h>"));
            ListSequence.fromList(SLinkOperations.getTargets(res, "items", true)).addElement(node_2744793885340947395);
            ListSequence.fromList(SLinkOperations.getTargets(res, "items", true)).addElement(node_2744793885340947399);
            ListSequence.fromList(SLinkOperations.getTargets(res, "items", true)).addElement(node_2744793885340947410);
            return res;
          }
        }.invoke();
        SNode node_2744793885340947375 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.LocalVariableDeclaration", null);
            SPropertyOperations.set(res, "name", (_context.createUniqueName("result", null)));
            SLinkOperations.setTarget(res, "type", node_2744793885340947381, true);
            SLinkOperations.setTarget(res, "init", node_2744793885340947392, true);
            return res;
          }
        }.invoke();
        return node_2744793885340947375;
      }
    }.invoke();
    ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(functionDeclaration, "body", true), "statements", true)).addElement(resultDeclaration);
    // add statement: *result = e;  
    SNode resultAssignment = new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_2744793885340947435 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.LocalVarRef", null);
            SLinkOperations.setTarget(res, "var", resultDeclaration, false);
            return res;
          }
        }.invoke();
        final SNode node_2744793885340947433 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.pointers.structure.DerefExpr", null);
            SLinkOperations.setTarget(res, "expression", node_2744793885340947435, true);
            return res;
          }
        }.invoke();
        final SNode node_2744793885340947439 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SLinkOperations.getTarget(_context.getNode(), "expression", true);
            return res;
          }
        }.invoke();
        final SNode node_2744793885340947431 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.AssignmentExpr", null);
            SLinkOperations.setTarget(res, "left", node_2744793885340947433, true);
            SLinkOperations.setTarget(res, "right", node_2744793885340947439, true);
            return res;
          }
        }.invoke();
        SNode node_2744793885340947430 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.ExpressionStatement", null);
            SLinkOperations.setTarget(res, "expr", node_2744793885340947431, true);
            return res;
          }
        }.invoke();
        return node_2744793885340947430;
      }
    }.invoke();
    ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(functionDeclaration, "body", true), "statements", true)).addElement(resultAssignment);
    // add statement: return result; 
    ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(functionDeclaration, "body", true), "statements", true)).addElement(new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_2744793885340947466 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.LocalVarRef", null);
            SLinkOperations.setTarget(res, "var", resultDeclaration, false);
            return res;
          }
        }.invoke();
        SNode node_2744793885340947464 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.modules.structure.ReturnStatement", null);
            SLinkOperations.setTarget(res, "expression", node_2744793885340947466, true);
            return res;
          }
        }.invoke();
        return node_2744793885340947464;
      }
    }.invoke());
    // build a struct type for the return value: struct Task { void* args; (void* -> void*) fun; } 
    final SNode taskStructDeclaration = new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_2744793885340947485 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.StructType", null);
            SLinkOperations.setTarget(res, "struct", argsStructDeclaration, false);
            return res;
          }
        }.invoke();
        final SNode node_2744793885340947482 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.Member", null);
            SPropertyOperations.set(res, "name", ("args"));
            SLinkOperations.setTarget(res, "type", node_2744793885340947485, true);
            return res;
          }
        }.invoke();
        final SNode node_2744793885340947495 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SNodeOperations.copyNode(voidPointerType);
            return res;
          }
        }.invoke();
        final SNode node_2744793885340947500 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SNodeOperations.copyNode(voidPointerType);
            return res;
          }
        }.invoke();
        final SNode node_2744793885340947493 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.modules.structure.FunctionRefType", null);
            SLinkOperations.setTarget(res, "returnType", node_2744793885340947495, true);
            ListSequence.fromList(SLinkOperations.getTargets(res, "argTypes", true)).addElement(node_2744793885340947500);
            return res;
          }
        }.invoke();
        final SNode node_2744793885340947490 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.Member", null);
            SPropertyOperations.set(res, "name", ("fun"));
            SLinkOperations.setTarget(res, "type", node_2744793885340947493, true);
            return res;
          }
        }.invoke();
        SNode node_2744793885340947476 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.StructDeclaration", null);
            SPropertyOperations.set(res, "name", (_context.createUniqueName("Task", module)));
            ListSequence.fromList(SLinkOperations.getTargets(res, "members", true)).addElement(node_2744793885340947482);
            ListSequence.fromList(SLinkOperations.getTargets(res, "members", true)).addElement(node_2744793885340947490);
            return res;
          }
        }.invoke();
        return node_2744793885340947476;
      }
    }.invoke();
    ListSequence.fromList(SLinkOperations.getTargets(module, "contents", true)).addElement(taskStructDeclaration);

    // return an instance of above struct initialized with a pointer to the created function 
    // and a heap-managed struct of the variable references 

    // add statement: Task* task = malloc(sizeof Task); 
    final SNode taskVarDeclaration = new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_2744793885340947533 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.StructType", null);
            SLinkOperations.setTarget(res, "struct", taskStructDeclaration, false);
            return res;
          }
        }.invoke();
        final SNode node_2744793885340947531 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.pointers.structure.PointerType", null);
            SLinkOperations.setTarget(res, "baseType", node_2744793885340947533, true);
            return res;
          }
        }.invoke();
        final SNode node_2744793885340947540 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.AbritraryTextItem", null);
            SPropertyOperations.set(res, "text", ("malloc(sizeof "));
            return res;
          }
        }.invoke();
        final SNode node_2744793885340947546 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.StructType", null);
            SLinkOperations.setTarget(res, "struct", taskStructDeclaration, false);
            return res;
          }
        }.invoke();
        final SNode node_2744793885340947544 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.AnyNodeItem", null);
            SLinkOperations.setTarget(res, "theNode", node_2744793885340947546, true);
            return res;
          }
        }.invoke();
        final SNode node_2744793885340947550 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.AbritraryTextItem", null);
            SPropertyOperations.set(res, "text", (")"));
            return res;
          }
        }.invoke();
        final SNode node_2744793885340947537 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.ArbitraryTextExpression", null);
            SPropertyOperations.set(res, "requiredStdHeader", ("<stdlib.h>"));
            ListSequence.fromList(SLinkOperations.getTargets(res, "items", true)).addElement(node_2744793885340947540);
            ListSequence.fromList(SLinkOperations.getTargets(res, "items", true)).addElement(node_2744793885340947544);
            ListSequence.fromList(SLinkOperations.getTargets(res, "items", true)).addElement(node_2744793885340947550);
            return res;
          }
        }.invoke();
        SNode node_2744793885340947526 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.LocalVariableDeclaration", null);
            SPropertyOperations.set(res, "name", (_context.createUniqueName("task", null)));
            SLinkOperations.setTarget(res, "type", node_2744793885340947531, true);
            SLinkOperations.setTarget(res, "init", node_2744793885340947537, true);
            return res;
          }
        }.invoke();
        return node_2744793885340947526;
      }
    }.invoke();
    SNodeOperations.insertPrevSiblingChild(embeddingStatement, taskVarDeclaration);
    // add statements for each accessed variable: task.args.varI = varI 
    for (final SNode localVarRef : ListSequence.fromList(SNodeOperations.getDescendants(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(resultAssignment, "expr", true), "com.mbeddr.core.expressions.structure.AssignmentExpr"), "right", true), "com.mbeddr.core.statements.structure.LocalVarRef", false, new String[]{}))) {
      SNode assignArgument = new _FunctionTypes._return_P0_E0<SNode>() {
        public SNode invoke() {
          final SNode node_2744793885340947585 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.GenericMemberRef", null);
              SLinkOperations.setTarget(res, "member", ListSequence.fromList(SUDeclaration_Behavior.call_members_9101132143318613823(argsStructDeclaration)).findFirst(new IWhereFilter<SNode>() {
                public boolean accept(SNode it) {
                  return SPropertyOperations.hasValue(SNodeOperations.cast(it, "com.mbeddr.core.udt.structure.Member"), "name", SPropertyOperations.getString(SLinkOperations.getTarget(localVarRef, "var", false), "name"));
                }
              }), false);
              return res;
            }
          }.invoke();
          final SNode node_2744793885340947611 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.GenericMemberRef", null);
              SLinkOperations.setTarget(res, "member", ListSequence.fromList(SUDeclaration_Behavior.call_members_9101132143318613823(taskStructDeclaration)).first(), false);
              return res;
            }
          }.invoke();
          final SNode node_2744793885340947619 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.LocalVarRef", null);
              SLinkOperations.setTarget(res, "var", taskVarDeclaration, false);
              return res;
            }
          }.invoke();
          final SNode node_2744793885340947609 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.GenericDotExpression", null);
              SLinkOperations.setTarget(res, "target", node_2744793885340947611, true);
              SLinkOperations.setTarget(res, "expression", node_2744793885340947619, true);
              return res;
            }
          }.invoke();
          final SNode node_2744793885340947583 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.GenericDotExpression", null);
              SLinkOperations.setTarget(res, "target", node_2744793885340947585, true);
              SLinkOperations.setTarget(res, "expression", node_2744793885340947609, true);
              return res;
            }
          }.invoke();
          final SNode node_2744793885340947623 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SNodeOperations.copyNode(localVarRef);
              return res;
            }
          }.invoke();
          final SNode node_2744793885340947582 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.AssignmentExpr", null);
              SLinkOperations.setTarget(res, "left", node_2744793885340947583, true);
              SLinkOperations.setTarget(res, "right", node_2744793885340947623, true);
              return res;
            }
          }.invoke();
          SNode node_2744793885340947580 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.ExpressionStatement", null);
              SLinkOperations.setTarget(res, "expr", node_2744793885340947582, true);
              return res;
            }
          }.invoke();
          return node_2744793885340947580;
        }
      }.invoke();
      SNodeOperations.insertPrevSiblingChild(embeddingStatement, assignArgument);
    }
    // add statement: task.fun = &[generated function] 
    SNode assignFunctionPointer = new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_2744793885340947646 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.GenericMemberRef", null);
            SLinkOperations.setTarget(res, "member", ListSequence.fromList(SUDeclaration_Behavior.call_members_9101132143318613823(taskStructDeclaration)).last(), false);
            return res;
          }
        }.invoke();
        final SNode node_2744793885340947654 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.LocalVarRef", null);
            SLinkOperations.setTarget(res, "var", taskVarDeclaration, false);
            return res;
          }
        }.invoke();
        final SNode node_2744793885340947644 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.GenericDotExpression", null);
            SLinkOperations.setTarget(res, "target", node_2744793885340947646, true);
            SLinkOperations.setTarget(res, "expression", node_2744793885340947654, true);
            return res;
          }
        }.invoke();
        final SNode node_2744793885340947658 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.modules.structure.FunctionRefExpr", null);
            SLinkOperations.setTarget(res, "function", functionDeclaration, false);
            return res;
          }
        }.invoke();
        final SNode node_2744793885340947642 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.AssignmentExpr", null);
            SLinkOperations.setTarget(res, "left", node_2744793885340947644, true);
            SLinkOperations.setTarget(res, "right", node_2744793885340947658, true);
            return res;
          }
        }.invoke();
        SNode node_2744793885340947640 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.ExpressionStatement", null);
            SLinkOperations.setTarget(res, "expr", node_2744793885340947642, true);
            return res;
          }
        }.invoke();
        return node_2744793885340947640;
      }
    }.invoke();
    SNodeOperations.insertPrevSiblingChild(embeddingStatement, assignFunctionPointer);

    // replace all variables v in the expression by args.v => re-bind them 
    for (final SNode localVarRef : ListSequence.fromList(SNodeOperations.getDescendants(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(resultAssignment, "expr", true), "com.mbeddr.core.expressions.structure.AssignmentExpr"), "right", true), "com.mbeddr.core.statements.structure.LocalVarRef", false, new String[]{}))) {
      SNodeOperations.replaceWithAnother(localVarRef, new _FunctionTypes._return_P0_E0<SNode>() {
        public SNode invoke() {
          final SNode node_2744793885340947690 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.LocalVarRef", null);
              SLinkOperations.setTarget(res, "var", argsCastDecl, false);
              return res;
            }
          }.invoke();
          final SNode node_2744793885340947694 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.GenericMemberRef", null);
              SLinkOperations.setTarget(res, "member", ListSequence.fromList(SUDeclaration_Behavior.call_members_9101132143318613823(argsStructDeclaration)).findFirst(new IWhereFilter<SNode>() {
                public boolean accept(SNode it) {
                  return SPropertyOperations.hasValue(SNodeOperations.cast(it, "com.mbeddr.core.udt.structure.Member"), "name", SPropertyOperations.getString(SLinkOperations.getTarget(localVarRef, "var", false), "name"));
                }
              }), false);
              return res;
            }
          }.invoke();
          SNode node_2744793885340947688 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.GenericDotExpression", null);
              SLinkOperations.setTarget(res, "expression", node_2744793885340947690, true);
              SLinkOperations.setTarget(res, "target", node_2744793885340947694, true);
              return res;
            }
          }.invoke();
          return node_2744793885340947688;
        }
      }.invoke());
    }

    // return the heap-managed variable of type struct Task 
    SNode temp = new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        SNode node_2744793885340947725 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.LocalVarRef", null);
            SLinkOperations.setTarget(res, "var", taskVarDeclaration, false);
            return res;
          }
        }.invoke();
        return node_2744793885340947725;
      }
    }.invoke();

    return temp;
  }
}
