package TasksAndSyncs.generator.template.main;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.generator.template.BaseMappingRuleContext;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.generator.template.ReferenceMacroContext;
import TasksAndSyncs.generator.util.NameGenerator;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.generator.template.WeavingMappingRuleContext;
import jetbrains.mps.generator.template.MappingScriptContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.generator.template.TemplateQueryContextWithMacro;
import com.mbeddr.core.udt.behavior.SUDeclaration_Behavior;

@Generated
public class QueriesGenerated {
  public static boolean baseMappingRule_Condition_5879014244861064164(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return false;
  }

  public static Object propertyMacro_GetPropertyValue_5514347295283398534(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.createUniqueName(_context.getTemplateValue(), null);
  }

  public static Object propertyMacro_GetPropertyValue_7288607883539033394(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.createUniqueName(_context.getTemplateValue(), null);
  }

  public static Object propertyMacro_GetPropertyValue_4644263955273508749(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.createUniqueName(_context.getTemplateValue(), null);
  }

  public static Object propertyMacro_GetPropertyValue_4644263955273722005(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_4644263955274589810(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.createUniqueName(_context.getTemplateValue(), null);
  }

  public static Object referenceMacro_GetReferent_4644263955272622644(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return NameGenerator.getFutureStructName();
  }

  public static Object referenceMacro_GetReferent_5514347295283398526(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "argsStruct");
  }

  public static Object referenceMacro_GetReferent_5514347295283398562(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "argsStruct");
  }

  public static Object referenceMacro_GetReferent_8376727689346755584(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "var", false), "name");
  }

  public static Object referenceMacro_GetReferent_8376727689346755595(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "var", false);
  }

  public static Object referenceMacro_GetReferent_6079605392881230870(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "funDecl");
  }

  public static Object referenceMacro_GetReferent_5514347295283988677(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return NameGenerator.getTaskStructName();
  }

  public static Object referenceMacro_GetReferent_3074299910028000429(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return NameGenerator.getTaskStructName();
  }

  public static Object referenceMacro_GetReferent_6843270485069604649(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return NameGenerator.getTaskStructName();
  }

  public static Object referenceMacro_GetReferent_5916914744740772497(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return NameGenerator.getTaskStructName();
  }

  public static Object referenceMacro_GetReferent_3074299910031502102(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return NameGenerator.getTaskStructName();
  }

  public static Object referenceMacro_GetReferent_7288607883539110144(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return "fun";
  }

  public static Object referenceMacro_GetReferent_7288607883539127818(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return "args";
  }

  public static Object referenceMacro_GetReferent_1504369025024539171(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return NameGenerator.getFutureStructName();
  }

  public static Object referenceMacro_GetReferent_1504369025025187349(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return NameGenerator.getFutureStructName();
  }

  public static Object referenceMacro_GetReferent_6843270485077675385(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return NameGenerator.getFutureStructName();
  }

  public static Object referenceMacro_GetReferent_7288607883537684633(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return NameGenerator.getFutureStructName();
  }

  public static Object referenceMacro_GetReferent_7288607883537882245(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return "pth";
  }

  public static Object referenceMacro_GetReferent_7288607883537941204(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return "finished";
  }

  public static Object referenceMacro_GetReferent_7288607883537763547(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return "finished";
  }

  public static Object referenceMacro_GetReferent_7288607883537684652(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return NameGenerator.getFutureStructName();
  }

  public static Object referenceMacro_GetReferent_7288607883537967754(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return NameGenerator.getFutureStructName();
  }

  public static Object referenceMacro_GetReferent_7288607883537967775(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return "pth";
  }

  public static Object referenceMacro_GetReferent_7288607883537967797(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return "finished";
  }

  public static Object referenceMacro_GetReferent_4644263955274749574(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "argsStruct");
  }

  public static Object referenceMacro_GetReferent_4644263955274683221(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "argsStruct");
  }

  public static Object referenceMacro_GetReferent_7288607883539663801(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return NameGenerator.getFutureStructName();
  }

  public static Object referenceMacro_GetReferent_7288607883539589338(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return "fun";
  }

  public static Object referenceMacro_GetReferent_7288607883539589346(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return "args";
  }

  public static Object referenceMacro_GetReferent_7288607883539589354(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return NameGenerator.getFutureStructName();
  }

  public static Object referenceMacro_GetReferent_7288607883539589365(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return NameGenerator.getFutureStructName();
  }

  public static Object referenceMacro_GetReferent_7288607883539679450(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return NameGenerator.getTaskStructName();
  }

  public static SNode sourceNodeQuery_8073526852155967706(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SNodeOperations.cast(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(_context.getNode(), "future", true)), "TasksAndSyncs.structure.FutureType"), "returnType", true);
  }

  public static SNode sourceNodeQuery_4644263955274064956(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "type", true);
  }

  public static Iterable<SNode> sourceNodesQuery_8376727689346755602(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SNodeOperations.getDescendants(SLinkOperations.getTarget(_context.getNode(), "expression", true), "com.mbeddr.core.statements.structure.LocalVarRef", false, new String[]{});
  }

  public static Iterable<SNode> sourceNodesQuery_4644263955273538232(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SNodeOperations.getDescendants(_context.getNode(), "com.mbeddr.core.statements.structure.LocalVarRef", false, new String[]{})).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return (SLinkOperations.getTarget(it, "var", false) != null);
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SLinkOperations.getTarget(it, "var", false);
      }
    });
  }

  public static SNode weaving_MappingRule_ContextNodeQuery_4644263955273501386(final IOperationContext operationContext, final WeavingMappingRuleContext _context) {
    return _context.getCopiedOutputNodeForInputNode(SNodeOperations.getAncestor(_context.getNode(), "com.mbeddr.core.modules.structure.ImplementationModule", false, false));
  }

  public static SNode weaving_MappingRule_ContextNodeQuery_4644263955274607916(final IOperationContext operationContext, final WeavingMappingRuleContext _context) {
    return _context.getCopiedOutputNodeForInputNode(SNodeOperations.getAncestor(_context.getNode(), "com.mbeddr.core.modules.structure.ImplementationModule", false, false));
  }

  public static void mappingScript_CodeBlock_6843270485077871161(final IOperationContext operationContext, final MappingScriptContext _context) {
    for (final SNode future : ListSequence.fromList(SModelOperations.getNodes(_context.getModel(), "TasksAndSyncs.structure.FutureResult"))) {
      SNodeOperations.replaceWithAnother(SNodeOperations.getParent(future), new _FunctionTypes._return_P0_E0<SNode>() {
        public SNode invoke() {
          final SNode node_961131662867865620 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(future), "com.mbeddr.core.expressions.structure.GenericDotExpression"), "expression", true);
              return res;
            }
          }.invoke();
          SNode node_961131662867865619 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("TasksAndSyncs.structure.FutureResultContainer", null);
              SLinkOperations.setTarget(res, "future", node_961131662867865620, true);
              return res;
            }
          }.invoke();
          return node_961131662867865619;
        }
      }.invoke());
    }

    for (final SNode future : ListSequence.fromList(SModelOperations.getNodes(_context.getModel(), "TasksAndSyncs.structure.FutureJoin"))) {
      SNodeOperations.replaceWithAnother(SNodeOperations.getParent(future), new _FunctionTypes._return_P0_E0<SNode>() {
        public SNode invoke() {
          final SNode node_961131662867865643 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(future), "com.mbeddr.core.expressions.structure.GenericDotExpression"), "expression", true);
              return res;
            }
          }.invoke();
          SNode node_961131662867865642 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("TasksAndSyncs.structure.FutureJoinContainer", null);
              SLinkOperations.setTarget(res, "future", node_961131662867865643, true);
              return res;
            }
          }.invoke();
          return node_961131662867865642;
        }
      }.invoke());
    }

    for (final SNode future : ListSequence.fromList(SModelOperations.getNodes(_context.getModel(), "TasksAndSyncs.structure.Future"))) {
      SNodeOperations.replaceWithAnother(SNodeOperations.getParent(future), new _FunctionTypes._return_P0_E0<SNode>() {
        public SNode invoke() {
          final SNode node_961131662867865666 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(future), "com.mbeddr.core.expressions.structure.GenericDotExpression"), "expression", true);
              return res;
            }
          }.invoke();
          SNode node_961131662867865665 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("TasksAndSyncs.structure.FutureContainer", null);
              SLinkOperations.setTarget(res, "task", node_961131662867865666, true);
              return res;
            }
          }.invoke();
          return node_961131662867865665;
        }
      }.invoke());
    }
  }

  public static void mappingScript_CodeBlock_6340335959758487422(final IOperationContext operationContext, final MappingScriptContext _context) {
    final SNode genericDeclarationsModule = new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        SNode node_961131662867865682 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.modules.structure.ImplementationModule", null);
            SPropertyOperations.set(res, "name", (NameGenerator.getGenericModuleName()));
            return res;
          }
        }.invoke();
        return node_961131662867865682;
      }
    }.invoke();

    for (SNode module : ListSequence.fromList(SModelOperations.getNodes(_context.getModel(), "com.mbeddr.core.modules.structure.Module"))) {
      ListSequence.fromList(SLinkOperations.getTargets(module, "imports", true)).addElement(new _FunctionTypes._return_P0_E0<SNode>() {
        public SNode invoke() {
          SNode node_961131662867865699 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("com.mbeddr.core.modules.structure.ModuleImport", null);
              SLinkOperations.setTarget(res, "module", genericDeclarationsModule, false);
              return res;
            }
          }.invoke();
          return node_961131662867865699;
        }
      }.invoke());
    }

    SModelOperations.addRootNode(_context.getModel(), genericDeclarationsModule);

    ListSequence.fromList(SLinkOperations.getTargets(ListSequence.fromList(SLinkOperations.getTargets(ListSequence.fromList(SModelOperations.getRoots(_context.getModel(), "com.mbeddr.core.buildconfig.structure.BuildConfiguration")).first(), "binaries", true)).first(), "referencedModules", true)).addElement(new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        SNode node_961131662867865723 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.buildconfig.structure.ModuleRef", null);
            SLinkOperations.setTarget(res, "module", genericDeclarationsModule, false);
            return res;
          }
        }.invoke();
        return node_961131662867865723;
      }
    }.invoke());

    final SNode voidPointerType = new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_961131662867865734 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.VoidType", null);
            return res;
          }
        }.invoke();
        SNode node_961131662867865732 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.pointers.structure.PointerType", null);
            SLinkOperations.setTarget(res, "baseType", node_961131662867865734, true);
            return res;
          }
        }.invoke();
        return node_961131662867865732;
      }
    }.invoke();

    // task struct with arguments and function pointer 
    final SNode taskStructArgs = new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_961131662867865746 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SNodeOperations.copyNode(voidPointerType);
            return res;
          }
        }.invoke();
        SNode node_961131662867865743 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.Member", null);
            SPropertyOperations.set(res, "name", ("args"));
            SLinkOperations.setTarget(res, "type", node_961131662867865746, true);
            return res;
          }
        }.invoke();
        return node_961131662867865743;
      }
    }.invoke();
    final SNode taskStructFun = new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_961131662867865760 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SNodeOperations.copyNode(voidPointerType);
            return res;
          }
        }.invoke();
        final SNode node_961131662867865765 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SNodeOperations.copyNode(voidPointerType);
            return res;
          }
        }.invoke();
        final SNode node_961131662867865759 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.modules.structure.FunctionRefType", null);
            SLinkOperations.setTarget(res, "returnType", node_961131662867865765, true);
            ListSequence.fromList(SLinkOperations.getTargets(res, "argTypes", true)).addElement(node_961131662867865760);
            return res;
          }
        }.invoke();
        SNode node_961131662867865756 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.Member", null);
            SPropertyOperations.set(res, "name", ("fun"));
            SLinkOperations.setTarget(res, "type", node_961131662867865759, true);
            return res;
          }
        }.invoke();
        return node_961131662867865756;
      }
    }.invoke();
    final SNode taskStruct = new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_961131662867865781 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = taskStructArgs;
            return res;
          }
        }.invoke();
        final SNode node_961131662867865784 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = taskStructFun;
            return res;
          }
        }.invoke();
        SNode node_961131662867865776 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.StructDeclaration", null);
            SPropertyOperations.set(res, "name", (NameGenerator.getTaskStructName()));
            SPropertyOperations.set(res, "exported", "" + ((true)));
            ListSequence.fromList(SLinkOperations.getTargets(res, "members", true)).addElement(node_961131662867865781);
            ListSequence.fromList(SLinkOperations.getTargets(res, "members", true)).addElement(node_961131662867865784);
            return res;
          }
        }.invoke();
        return node_961131662867865776;
      }
    }.invoke();
    ListSequence.fromList(SLinkOperations.getTargets(genericDeclarationsModule, "contents", true)).addElement(taskStruct);

    // future struct 
    final SNode futureStruct = new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_961131662867865813 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.AbritraryTextItem", null);
            SPropertyOperations.set(res, "text", ("pthread_t"));
            return res;
          }
        }.invoke();
        final SNode node_961131662867865810 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.ArbitraryTextType", null);
            SPropertyOperations.set(res, "requiredStdHeader", ("<pthread.h>"));
            ListSequence.fromList(SLinkOperations.getTargets(res, "items", true)).addElement(node_961131662867865813);
            return res;
          }
        }.invoke();
        final SNode node_961131662867865807 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.Member", null);
            SPropertyOperations.set(res, "name", ("pth"));
            SLinkOperations.setTarget(res, "type", node_961131662867865810, true);
            return res;
          }
        }.invoke();
        final SNode node_961131662867865822 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SNodeOperations.copyNode(voidPointerType);
            return res;
          }
        }.invoke();
        final SNode node_961131662867865819 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.Member", null);
            SPropertyOperations.set(res, "name", ("result"));
            SLinkOperations.setTarget(res, "type", node_961131662867865822, true);
            return res;
          }
        }.invoke();
        final SNode node_961131662867865831 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.BooleanType", null);
            return res;
          }
        }.invoke();
        final SNode node_961131662867865828 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.Member", null);
            SPropertyOperations.set(res, "name", ("finished"));
            SLinkOperations.setTarget(res, "type", node_961131662867865831, true);
            return res;
          }
        }.invoke();
        SNode node_961131662867865802 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.StructDeclaration", null);
            SPropertyOperations.set(res, "exported", "" + ((true)));
            SPropertyOperations.set(res, "name", (NameGenerator.getFutureStructName()));
            ListSequence.fromList(SLinkOperations.getTargets(res, "members", true)).addElement(node_961131662867865807);
            ListSequence.fromList(SLinkOperations.getTargets(res, "members", true)).addElement(node_961131662867865819);
            ListSequence.fromList(SLinkOperations.getTargets(res, "members", true)).addElement(node_961131662867865828);
            return res;
          }
        }.invoke();
        return node_961131662867865802;
      }
    }.invoke();
    ListSequence.fromList(SLinkOperations.getTargets(genericDeclarationsModule, "contents", true)).addElement(futureStruct);

    // future function => run task, return future 
    final SNode taskArgument = new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_961131662867865852 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.StructType", null);
            SLinkOperations.setTarget(res, "struct", taskStruct, false);
            return res;
          }
        }.invoke();
        SNode node_961131662867865849 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.modules.structure.Argument", null);
            SPropertyOperations.set(res, "name", ("task"));
            SLinkOperations.setTarget(res, "type", node_961131662867865852, true);
            return res;
          }
        }.invoke();
        return node_961131662867865849;
      }
    }.invoke();
    final SNode pthDeclaration = new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_961131662867865866 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.AbritraryTextItem", null);
            SPropertyOperations.set(res, "text", ("pthread"));
            return res;
          }
        }.invoke();
        final SNode node_961131662867865864 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.ArbitraryTextType", null);
            SPropertyOperations.set(res, "requiredStdHeader", ("<pthread.h>"));
            ListSequence.fromList(SLinkOperations.getTargets(res, "items", true)).addElement(node_961131662867865866);
            return res;
          }
        }.invoke();
        SNode node_961131662867865861 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.LocalVariableDeclaration", null);
            SPropertyOperations.set(res, "name", ("pth"));
            SLinkOperations.setTarget(res, "type", node_961131662867865864, true);
            return res;
          }
        }.invoke();
        return node_961131662867865861;
      }
    }.invoke();
    final SNode pthread_createCall = new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_961131662867865884 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.LocalVarRef", null);
            SLinkOperations.setTarget(res, "var", pthDeclaration, false);
            return res;
          }
        }.invoke();
        final SNode node_961131662867865883 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.pointers.structure.ReferenceExpr", null);
            SLinkOperations.setTarget(res, "expression", node_961131662867865884, true);
            return res;
          }
        }.invoke();
        final SNode node_961131662867865889 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.pointers.structure.NullExpression", null);
            return res;
          }
        }.invoke();
        final SNode node_961131662867865892 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.modules.structure.ArgumentRef", null);
            SLinkOperations.setTarget(res, "arg", taskArgument, false);
            return res;
          }
        }.invoke();
        final SNode node_961131662867865896 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.GenericMemberRef", null);
            SLinkOperations.setTarget(res, "member", taskStructFun, false);
            return res;
          }
        }.invoke();
        final SNode node_961131662867865891 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.GenericDotExpression", null);
            SLinkOperations.setTarget(res, "expression", node_961131662867865892, true);
            SLinkOperations.setTarget(res, "target", node_961131662867865896, true);
            return res;
          }
        }.invoke();
        final SNode node_961131662867865902 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.modules.structure.ArgumentRef", null);
            SLinkOperations.setTarget(res, "arg", taskArgument, false);
            return res;
          }
        }.invoke();
        final SNode node_961131662867865906 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.GenericMemberRef", null);
            SLinkOperations.setTarget(res, "member", taskStructArgs, false);
            return res;
          }
        }.invoke();
        final SNode node_961131662867865901 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.GenericDotExpression", null);
            SLinkOperations.setTarget(res, "expression", node_961131662867865902, true);
            SLinkOperations.setTarget(res, "target", node_961131662867865906, true);
            return res;
          }
        }.invoke();
        final SNode node_961131662867865878 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.ArbitraryFunctionCall", null);
            SPropertyOperations.set(res, "requiredStdHeader", ("<pthread.h>"));
            SPropertyOperations.set(res, "calledFunctionName", ("pthread_create"));
            ListSequence.fromList(SLinkOperations.getTargets(res, "arguments", true)).addElement(node_961131662867865883);
            ListSequence.fromList(SLinkOperations.getTargets(res, "arguments", true)).addElement(node_961131662867865889);
            ListSequence.fromList(SLinkOperations.getTargets(res, "arguments", true)).addElement(node_961131662867865891);
            ListSequence.fromList(SLinkOperations.getTargets(res, "arguments", true)).addElement(node_961131662867865901);
            return res;
          }
        }.invoke();
        SNode node_961131662867865877 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.ExpressionStatement", null);
            SLinkOperations.setTarget(res, "expr", node_961131662867865878, true);
            return res;
          }
        }.invoke();
        return node_961131662867865877;
      }
    }.invoke();
    final SNode returnStatement = new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_961131662867865921 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.AbritraryTextItem", null);
            SPropertyOperations.set(res, "text", ("(" + NameGenerator.getFutureStructName() + "){ .pth = pth }"));
            return res;
          }
        }.invoke();
        final SNode node_961131662867865929 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.StructType", null);
            SLinkOperations.setTarget(res, "struct", futureStruct, false);
            return res;
          }
        }.invoke();
        final SNode node_961131662867865918 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.ArbitraryTextExpression", null);
            SPropertyOperations.set(res, "requiredStdHeader", (null));
            SLinkOperations.setTarget(res, "dummyType", node_961131662867865929, true);
            ListSequence.fromList(SLinkOperations.getTargets(res, "items", true)).addElement(node_961131662867865921);
            return res;
          }
        }.invoke();
        SNode node_961131662867865917 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.modules.structure.ReturnStatement", null);
            SLinkOperations.setTarget(res, "expression", node_961131662867865918, true);
            return res;
          }
        }.invoke();
        return node_961131662867865917;
      }
    }.invoke();
    SNode futureFunction = new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_961131662867865944 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.StructType", null);
            SLinkOperations.setTarget(res, "struct", futureStruct, false);
            return res;
          }
        }.invoke();
        final SNode node_961131662867865950 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = taskArgument;
            return res;
          }
        }.invoke();
        final SNode node_961131662867865954 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = pthDeclaration;
            return res;
          }
        }.invoke();
        final SNode node_961131662867865957 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = pthread_createCall;
            return res;
          }
        }.invoke();
        final SNode node_961131662867865960 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = returnStatement;
            return res;
          }
        }.invoke();
        final SNode node_961131662867865953 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.StatementList", null);
            ListSequence.fromList(SLinkOperations.getTargets(res, "statements", true)).addElement(node_961131662867865954);
            ListSequence.fromList(SLinkOperations.getTargets(res, "statements", true)).addElement(node_961131662867865957);
            ListSequence.fromList(SLinkOperations.getTargets(res, "statements", true)).addElement(node_961131662867865960);
            return res;
          }
        }.invoke();
        SNode node_961131662867865939 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.modules.structure.Function", null);
            SPropertyOperations.set(res, "inline", "" + ((true)));
            SPropertyOperations.set(res, "exported", "" + ((true)));
            SPropertyOperations.set(res, "name", (NameGenerator.getFutureFunctionName()));
            SPropertyOperations.set(res, "overriddenCodeLocation", (""));
            SPropertyOperations.set(res, "contextNodeId", (""));
            SPropertyOperations.set(res, "contextModelId", (""));
            SPropertyOperations.set(res, "__inlinetext", (""));
            SLinkOperations.setTarget(res, "type", node_961131662867865944, true);
            SLinkOperations.setTarget(res, "body", node_961131662867865953, true);
            ListSequence.fromList(SLinkOperations.getTargets(res, "arguments", true)).addElement(node_961131662867865950);
            return res;
          }
        }.invoke();
        return node_961131662867865939;
      }
    }.invoke();

    ListSequence.fromList(SLinkOperations.getTargets(genericDeclarationsModule, "contents", true)).addElement(futureFunction);
  }

  public static SNode insertMacro_Query_5514347295283476002(final IOperationContext operationContext, final TemplateQueryContextWithMacro _context) {
    return SNodeOperations.copyNode(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(SNodeOperations.cast(TypeChecker.getInstance().getTypeOf(_context.getNode()), "TasksAndSyncs.structure.TaskType"), "returnType", true), "com.mbeddr.core.pointers.structure.PointerType"), "baseType", true));
  }

  public static SNode insertMacro_Query_3074299910025853496(final IOperationContext operationContext, final TemplateQueryContextWithMacro _context) {
    SNode exprToBind = SLinkOperations.getTarget(_context.getNode(), "expr", true);
    final SNode structExpression = SLinkOperations.getTarget(_context.getNode(), "structExpr", true);
    final SNode structDeclaration = SLinkOperations.getTarget(SNodeOperations.cast(TypeChecker.getInstance().getTypeOf(structExpression), "com.mbeddr.core.udt.structure.StructType"), "struct", false);
    for (final SNode localVarRef : ListSequence.fromList(SNodeOperations.getDescendants(exprToBind, "com.mbeddr.core.statements.structure.LocalVarRef", false, new String[]{}))) {
      SNodeOperations.replaceWithAnother(localVarRef, new _FunctionTypes._return_P0_E0<SNode>() {
        public SNode invoke() {
          final SNode node_961131662867866030 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = structExpression;
              return res;
            }
          }.invoke();
          final SNode node_961131662867866028 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.ParensExpression", null);
              SLinkOperations.setTarget(res, "expression", node_961131662867866030, true);
              return res;
            }
          }.invoke();
          final SNode node_961131662867866033 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.GenericMemberRef", null);
              SLinkOperations.setTarget(res, "member", ListSequence.fromList(SUDeclaration_Behavior.call_members_9101132143318613823(structDeclaration)).findFirst(new IWhereFilter<SNode>() {
                public boolean accept(SNode it) {
                  return SPropertyOperations.hasValue(SNodeOperations.cast(it, "com.mbeddr.core.udt.structure.Member"), "name", SPropertyOperations.getString(SLinkOperations.getTarget(localVarRef, "var", false), "name"));
                }
              }), false);
              return res;
            }
          }.invoke();
          SNode node_961131662867866026 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.GenericDotExpression", null);
              SLinkOperations.setTarget(res, "expression", node_961131662867866028, true);
              SLinkOperations.setTarget(res, "target", node_961131662867866033, true);
              return res;
            }
          }.invoke();
          return node_961131662867866026;
        }
      }.invoke());
    }

    return exprToBind;
  }

  public static SNode insertMacro_Query_5879014244860658633(final IOperationContext operationContext, final TemplateQueryContextWithMacro _context) {
    return SLinkOperations.getTarget(_context.getNode(), "task", true);
  }

  public static SNode insertMacro_Query_7288607883537722188(final IOperationContext operationContext, final TemplateQueryContextWithMacro _context) {
    return SLinkOperations.getTarget(_context.getNode(), "future", true);
  }

  public static SNode insertMacro_Query_7288607883537967760(final IOperationContext operationContext, final TemplateQueryContextWithMacro _context) {
    return SLinkOperations.getTarget(_context.getNode(), "future", true);
  }

  public static SNode insertMacro_Query_2744793885329335734(final IOperationContext operationContext, final TemplateQueryContextWithMacro _context) {
    //  some preparation 
    SNode embeddingStatement = SNodeOperations.getAncestor(_context.getNode(), "com.mbeddr.core.statements.structure.Statement", false, false);
    final SNode module = SNodeOperations.getAncestor(_context.getNode(), "com.mbeddr.core.modules.structure.ImplementationModule", false, false);
    final SNode voidPointerType = new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_961131662867866095 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.VoidType", null);
            return res;
          }
        }.invoke();
        SNode node_961131662867866093 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.pointers.structure.PointerType", null);
            SLinkOperations.setTarget(res, "baseType", node_961131662867866095, true);
            return res;
          }
        }.invoke();
        return node_961131662867866093;
      }
    }.invoke();
    // build a struct declaration for the variable references 
    final SNode argsStructDeclaration = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.StructDeclaration", null);
    ListSequence.fromList(SLinkOperations.getTargets(module, "contents", true)).addElement(argsStructDeclaration);
    SPropertyOperations.set(argsStructDeclaration, "name", _context.createUniqueName("Args", module));
    for (SNode localVariableDeclaration : ListSequence.fromList(SNodeOperations.getDescendants(_context.getNode(), "com.mbeddr.core.statements.structure.LocalVarRef", false, new String[]{})).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return (SLinkOperations.getTarget(it, "var", false) != null);
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SLinkOperations.getTarget(it, "var", false);
      }
    })) {
      SNode member = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.Member", null);
      SPropertyOperations.set(member, "name", SPropertyOperations.getString(localVariableDeclaration, "name"));
      SLinkOperations.setTarget(member, "type", SNodeOperations.copyNode(SLinkOperations.getTarget(localVariableDeclaration, "type", true)), true);
      ListSequence.fromList(SLinkOperations.getTargets(argsStructDeclaration, "members", true)).addElement(member);
    }
    // build a function declaration for the parallelized expression 
    final SNode functionDeclaration = SConceptOperations.createNewNode("com.mbeddr.core.modules.structure.Function", null);
    ListSequence.fromList(SLinkOperations.getTargets(module, "contents", true)).addElement(functionDeclaration);
    SPropertyOperations.set(functionDeclaration, "name", _context.createUniqueName("par", module));
    SLinkOperations.setTarget(functionDeclaration, "type", new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_961131662867866190 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.VoidType", null);
            return res;
          }
        }.invoke();
        SNode node_961131662867866188 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.pointers.structure.PointerType", null);
            SLinkOperations.setTarget(res, "baseType", node_961131662867866190, true);
            return res;
          }
        }.invoke();
        return node_961131662867866188;
      }
    }.invoke(), true);
    ListSequence.fromList(SLinkOperations.getTargets(functionDeclaration, "arguments", true)).addElement(new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_961131662867866208 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SNodeOperations.copyNode(voidPointerType);
            return res;
          }
        }.invoke();
        SNode node_961131662867866202 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.modules.structure.Argument", null);
            SPropertyOperations.set(res, "name", (_context.createUniqueName("voidArgs", null)));
            SLinkOperations.setTarget(res, "type", node_961131662867866208, true);
            return res;
          }
        }.invoke();
        return node_961131662867866202;
      }
    }.invoke());
    // add statement: T* args = (T*) argsVoid; 
    final SNode structPointerType = new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_961131662867866221 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.StructType", null);
            SLinkOperations.setTarget(res, "struct", argsStructDeclaration, false);
            return res;
          }
        }.invoke();
        SNode node_961131662867866219 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.pointers.structure.PointerType", null);
            SLinkOperations.setTarget(res, "baseType", node_961131662867866221, true);
            return res;
          }
        }.invoke();
        return node_961131662867866219;
      }
    }.invoke();
    final SNode argsCastDecl = new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_961131662867866234 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SNodeOperations.copyNode(structPointerType);
            return res;
          }
        }.invoke();
        final SNode node_961131662867866241 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SNodeOperations.copyNode(structPointerType);
            return res;
          }
        }.invoke();
        final SNode node_961131662867866246 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.modules.structure.ArgumentRef", null);
            SLinkOperations.setTarget(res, "arg", ListSequence.fromList(SLinkOperations.getTargets(functionDeclaration, "arguments", true)).first(), false);
            return res;
          }
        }.invoke();
        final SNode node_961131662867866239 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.CastExpression", null);
            SLinkOperations.setTarget(res, "targetType", node_961131662867866241, true);
            SLinkOperations.setTarget(res, "expr", node_961131662867866246, true);
            return res;
          }
        }.invoke();
        SNode node_961131662867866229 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.LocalVariableDeclaration", null);
            SPropertyOperations.set(res, "name", (_context.createUniqueName("args", null)));
            SLinkOperations.setTarget(res, "type", node_961131662867866234, true);
            SLinkOperations.setTarget(res, "init", node_961131662867866239, true);
            return res;
          }
        }.invoke();
        return node_961131662867866229;
      }
    }.invoke();
    ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(functionDeclaration, "body", true), "statements", true)).addElement(argsCastDecl);
    // add statement: T* result = malloc(sizeof T);  
    final SNode resultDeclaration = new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_961131662867866278 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SNodeOperations.copyNode(SLinkOperations.getTarget(SNodeOperations.cast(TypeChecker.getInstance().getTypeOf(_context.getNode()), "TasksAndSyncs.structure.TaskType"), "returnType", true));
            return res;
          }
        }.invoke();
        final SNode node_961131662867866276 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.pointers.structure.PointerType", null);
            SLinkOperations.setTarget(res, "baseType", node_961131662867866278, true);
            return res;
          }
        }.invoke();
        final SNode node_961131662867866290 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.AbritraryTextItem", null);
            SPropertyOperations.set(res, "text", ("malloc(sizeof "));
            return res;
          }
        }.invoke();
        final SNode node_961131662867866296 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SNodeOperations.copyNode(SLinkOperations.getTarget(SNodeOperations.cast(TypeChecker.getInstance().getTypeOf(_context.getNode()), "TasksAndSyncs.structure.TaskType"), "returnType", true));
            return res;
          }
        }.invoke();
        final SNode node_961131662867866294 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.AnyNodeItem", null);
            SLinkOperations.setTarget(res, "theNode", node_961131662867866296, true);
            return res;
          }
        }.invoke();
        final SNode node_961131662867866305 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.AbritraryTextItem", null);
            SPropertyOperations.set(res, "text", (")"));
            return res;
          }
        }.invoke();
        final SNode node_961131662867866287 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.ArbitraryTextExpression", null);
            SPropertyOperations.set(res, "requiredStdHeader", ("<stdlib.h>"));
            ListSequence.fromList(SLinkOperations.getTargets(res, "items", true)).addElement(node_961131662867866290);
            ListSequence.fromList(SLinkOperations.getTargets(res, "items", true)).addElement(node_961131662867866294);
            ListSequence.fromList(SLinkOperations.getTargets(res, "items", true)).addElement(node_961131662867866305);
            return res;
          }
        }.invoke();
        SNode node_961131662867866270 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.LocalVariableDeclaration", null);
            SPropertyOperations.set(res, "name", (_context.createUniqueName("result", null)));
            SLinkOperations.setTarget(res, "type", node_961131662867866276, true);
            SLinkOperations.setTarget(res, "init", node_961131662867866287, true);
            return res;
          }
        }.invoke();
        return node_961131662867866270;
      }
    }.invoke();
    ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(functionDeclaration, "body", true), "statements", true)).addElement(resultDeclaration);
    // add statement: *result = e;  
    SNode resultAssignment = new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_961131662867866330 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.LocalVarRef", null);
            SLinkOperations.setTarget(res, "var", resultDeclaration, false);
            return res;
          }
        }.invoke();
        final SNode node_961131662867866328 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.pointers.structure.DerefExpr", null);
            SLinkOperations.setTarget(res, "expression", node_961131662867866330, true);
            return res;
          }
        }.invoke();
        final SNode node_961131662867866334 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SLinkOperations.getTarget(_context.getNode(), "expression", true);
            return res;
          }
        }.invoke();
        final SNode node_961131662867866326 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.AssignmentExpr", null);
            SLinkOperations.setTarget(res, "left", node_961131662867866328, true);
            SLinkOperations.setTarget(res, "right", node_961131662867866334, true);
            return res;
          }
        }.invoke();
        SNode node_961131662867866325 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.ExpressionStatement", null);
            SLinkOperations.setTarget(res, "expr", node_961131662867866326, true);
            return res;
          }
        }.invoke();
        return node_961131662867866325;
      }
    }.invoke();
    ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(functionDeclaration, "body", true), "statements", true)).addElement(resultAssignment);
    // add statement: return result; 
    ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(functionDeclaration, "body", true), "statements", true)).addElement(new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_961131662867866361 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.LocalVarRef", null);
            SLinkOperations.setTarget(res, "var", resultDeclaration, false);
            return res;
          }
        }.invoke();
        SNode node_961131662867866359 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.modules.structure.ReturnStatement", null);
            SLinkOperations.setTarget(res, "expression", node_961131662867866361, true);
            return res;
          }
        }.invoke();
        return node_961131662867866359;
      }
    }.invoke());
    // build a struct type for the return value: struct Task { void* args; (void* -> void*) fun; } 
    final SNode taskStructDeclaration = new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_961131662867866380 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.StructType", null);
            SLinkOperations.setTarget(res, "struct", argsStructDeclaration, false);
            return res;
          }
        }.invoke();
        final SNode node_961131662867866377 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.Member", null);
            SPropertyOperations.set(res, "name", ("args"));
            SLinkOperations.setTarget(res, "type", node_961131662867866380, true);
            return res;
          }
        }.invoke();
        final SNode node_961131662867866390 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SNodeOperations.copyNode(voidPointerType);
            return res;
          }
        }.invoke();
        final SNode node_961131662867866395 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SNodeOperations.copyNode(voidPointerType);
            return res;
          }
        }.invoke();
        final SNode node_961131662867866388 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.modules.structure.FunctionRefType", null);
            SLinkOperations.setTarget(res, "returnType", node_961131662867866390, true);
            ListSequence.fromList(SLinkOperations.getTargets(res, "argTypes", true)).addElement(node_961131662867866395);
            return res;
          }
        }.invoke();
        final SNode node_961131662867866385 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.Member", null);
            SPropertyOperations.set(res, "name", ("fun"));
            SLinkOperations.setTarget(res, "type", node_961131662867866388, true);
            return res;
          }
        }.invoke();
        SNode node_961131662867866371 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.StructDeclaration", null);
            SPropertyOperations.set(res, "name", (_context.createUniqueName("Task", module)));
            ListSequence.fromList(SLinkOperations.getTargets(res, "members", true)).addElement(node_961131662867866377);
            ListSequence.fromList(SLinkOperations.getTargets(res, "members", true)).addElement(node_961131662867866385);
            return res;
          }
        }.invoke();
        return node_961131662867866371;
      }
    }.invoke();
    ListSequence.fromList(SLinkOperations.getTargets(module, "contents", true)).addElement(taskStructDeclaration);

    // return an instance of above struct initialized with a pointer to the created function 
    // and a heap-managed struct of the variable references 

    // add statement: Task* task = malloc(sizeof Task); 
    final SNode taskVarDeclaration = new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_961131662867866428 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.StructType", null);
            SLinkOperations.setTarget(res, "struct", taskStructDeclaration, false);
            return res;
          }
        }.invoke();
        final SNode node_961131662867866426 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.pointers.structure.PointerType", null);
            SLinkOperations.setTarget(res, "baseType", node_961131662867866428, true);
            return res;
          }
        }.invoke();
        final SNode node_961131662867866435 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.AbritraryTextItem", null);
            SPropertyOperations.set(res, "text", ("malloc(sizeof "));
            return res;
          }
        }.invoke();
        final SNode node_961131662867866441 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.StructType", null);
            SLinkOperations.setTarget(res, "struct", taskStructDeclaration, false);
            return res;
          }
        }.invoke();
        final SNode node_961131662867866439 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.AnyNodeItem", null);
            SLinkOperations.setTarget(res, "theNode", node_961131662867866441, true);
            return res;
          }
        }.invoke();
        final SNode node_961131662867866445 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.AbritraryTextItem", null);
            SPropertyOperations.set(res, "text", (")"));
            return res;
          }
        }.invoke();
        final SNode node_961131662867866432 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.ArbitraryTextExpression", null);
            SPropertyOperations.set(res, "requiredStdHeader", ("<stdlib.h>"));
            ListSequence.fromList(SLinkOperations.getTargets(res, "items", true)).addElement(node_961131662867866435);
            ListSequence.fromList(SLinkOperations.getTargets(res, "items", true)).addElement(node_961131662867866439);
            ListSequence.fromList(SLinkOperations.getTargets(res, "items", true)).addElement(node_961131662867866445);
            return res;
          }
        }.invoke();
        SNode node_961131662867866421 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.LocalVariableDeclaration", null);
            SPropertyOperations.set(res, "name", (_context.createUniqueName("task", null)));
            SLinkOperations.setTarget(res, "type", node_961131662867866426, true);
            SLinkOperations.setTarget(res, "init", node_961131662867866432, true);
            return res;
          }
        }.invoke();
        return node_961131662867866421;
      }
    }.invoke();
    SNodeOperations.insertPrevSiblingChild(embeddingStatement, taskVarDeclaration);
    // add statements for each accessed variable: task.args.varI = varI 
    for (final SNode localVarRef : ListSequence.fromList(SNodeOperations.getDescendants(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(resultAssignment, "expr", true), "com.mbeddr.core.expressions.structure.AssignmentExpr"), "right", true), "com.mbeddr.core.statements.structure.LocalVarRef", false, new String[]{}))) {
      SNode assignArgument = new _FunctionTypes._return_P0_E0<SNode>() {
        public SNode invoke() {
          final SNode node_961131662867866480 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.GenericMemberRef", null);
              SLinkOperations.setTarget(res, "member", ListSequence.fromList(SUDeclaration_Behavior.call_members_9101132143318613823(argsStructDeclaration)).findFirst(new IWhereFilter<SNode>() {
                public boolean accept(SNode it) {
                  return SPropertyOperations.hasValue(SNodeOperations.cast(it, "com.mbeddr.core.udt.structure.Member"), "name", SPropertyOperations.getString(SLinkOperations.getTarget(localVarRef, "var", false), "name"));
                }
              }), false);
              return res;
            }
          }.invoke();
          final SNode node_961131662867866506 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.GenericMemberRef", null);
              SLinkOperations.setTarget(res, "member", ListSequence.fromList(SUDeclaration_Behavior.call_members_9101132143318613823(taskStructDeclaration)).first(), false);
              return res;
            }
          }.invoke();
          final SNode node_961131662867866514 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.LocalVarRef", null);
              SLinkOperations.setTarget(res, "var", taskVarDeclaration, false);
              return res;
            }
          }.invoke();
          final SNode node_961131662867866504 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.GenericDotExpression", null);
              SLinkOperations.setTarget(res, "target", node_961131662867866506, true);
              SLinkOperations.setTarget(res, "expression", node_961131662867866514, true);
              return res;
            }
          }.invoke();
          final SNode node_961131662867866478 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.GenericDotExpression", null);
              SLinkOperations.setTarget(res, "target", node_961131662867866480, true);
              SLinkOperations.setTarget(res, "expression", node_961131662867866504, true);
              return res;
            }
          }.invoke();
          final SNode node_961131662867866518 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SNodeOperations.copyNode(localVarRef);
              return res;
            }
          }.invoke();
          final SNode node_961131662867866477 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.AssignmentExpr", null);
              SLinkOperations.setTarget(res, "left", node_961131662867866478, true);
              SLinkOperations.setTarget(res, "right", node_961131662867866518, true);
              return res;
            }
          }.invoke();
          SNode node_961131662867866475 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.ExpressionStatement", null);
              SLinkOperations.setTarget(res, "expr", node_961131662867866477, true);
              return res;
            }
          }.invoke();
          return node_961131662867866475;
        }
      }.invoke();
      SNodeOperations.insertPrevSiblingChild(embeddingStatement, assignArgument);
    }
    // add statement: task.fun = &[generated function] 
    SNode assignFunctionPointer = new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        final SNode node_961131662867866541 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.GenericMemberRef", null);
            SLinkOperations.setTarget(res, "member", ListSequence.fromList(SUDeclaration_Behavior.call_members_9101132143318613823(taskStructDeclaration)).last(), false);
            return res;
          }
        }.invoke();
        final SNode node_961131662867866549 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.LocalVarRef", null);
            SLinkOperations.setTarget(res, "var", taskVarDeclaration, false);
            return res;
          }
        }.invoke();
        final SNode node_961131662867866539 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.GenericDotExpression", null);
            SLinkOperations.setTarget(res, "target", node_961131662867866541, true);
            SLinkOperations.setTarget(res, "expression", node_961131662867866549, true);
            return res;
          }
        }.invoke();
        final SNode node_961131662867866553 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.modules.structure.FunctionRefExpr", null);
            SLinkOperations.setTarget(res, "function", functionDeclaration, false);
            return res;
          }
        }.invoke();
        final SNode node_961131662867866537 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.AssignmentExpr", null);
            SLinkOperations.setTarget(res, "left", node_961131662867866539, true);
            SLinkOperations.setTarget(res, "right", node_961131662867866553, true);
            return res;
          }
        }.invoke();
        SNode node_961131662867866535 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.ExpressionStatement", null);
            SLinkOperations.setTarget(res, "expr", node_961131662867866537, true);
            return res;
          }
        }.invoke();
        return node_961131662867866535;
      }
    }.invoke();
    SNodeOperations.insertPrevSiblingChild(embeddingStatement, assignFunctionPointer);

    // replace all variables v in the expression by args.v => re-bind them 
    for (final SNode localVarRef : ListSequence.fromList(SNodeOperations.getDescendants(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(resultAssignment, "expr", true), "com.mbeddr.core.expressions.structure.AssignmentExpr"), "right", true), "com.mbeddr.core.statements.structure.LocalVarRef", false, new String[]{}))) {
      SNodeOperations.replaceWithAnother(localVarRef, new _FunctionTypes._return_P0_E0<SNode>() {
        public SNode invoke() {
          final SNode node_961131662867866585 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.LocalVarRef", null);
              SLinkOperations.setTarget(res, "var", argsCastDecl, false);
              return res;
            }
          }.invoke();
          final SNode node_961131662867866589 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("com.mbeddr.core.udt.structure.GenericMemberRef", null);
              SLinkOperations.setTarget(res, "member", ListSequence.fromList(SUDeclaration_Behavior.call_members_9101132143318613823(argsStructDeclaration)).findFirst(new IWhereFilter<SNode>() {
                public boolean accept(SNode it) {
                  return SPropertyOperations.hasValue(SNodeOperations.cast(it, "com.mbeddr.core.udt.structure.Member"), "name", SPropertyOperations.getString(SLinkOperations.getTarget(localVarRef, "var", false), "name"));
                }
              }), false);
              return res;
            }
          }.invoke();
          SNode node_961131662867866583 = new _FunctionTypes._return_P0_E0<SNode>() {
            public SNode invoke() {
              SNode res = SConceptOperations.createNewNode("com.mbeddr.core.expressions.structure.GenericDotExpression", null);
              SLinkOperations.setTarget(res, "expression", node_961131662867866585, true);
              SLinkOperations.setTarget(res, "target", node_961131662867866589, true);
              return res;
            }
          }.invoke();
          return node_961131662867866583;
        }
      }.invoke());
    }

    // return the heap-managed variable of type struct Task 
    SNode temp = new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        SNode node_961131662867866620 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.core.statements.structure.LocalVarRef", null);
            SLinkOperations.setTarget(res, "var", taskVarDeclaration, false);
            return res;
          }
        }.invoke();
        return node_961131662867866620;
      }
    }.invoke();

    return temp;
  }

  public static SNode insertMacro_Query_5514347295282597991(final IOperationContext operationContext, final TemplateQueryContextWithMacro _context) {
    return SNodeOperations.copyNode(SLinkOperations.getTarget(SNodeOperations.cast(TypeChecker.getInstance().getTypeOf(_context.getNode()), "TasksAndSyncs.structure.TaskType"), "returnType", true));
  }

  public static SNode insertMacro_Query_5514347295282624061(final IOperationContext operationContext, final TemplateQueryContextWithMacro _context) {
    return SNodeOperations.copyNode(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(SNodeOperations.cast(TypeChecker.getInstance().getTypeOf(_context.getNode()), "TasksAndSyncs.structure.TaskType"), "returnType", true), "com.mbeddr.core.pointers.structure.PointerType"), "baseType", true));
  }

  public static SNode insertMacro_Query_5514347295283030968(final IOperationContext operationContext, final TemplateQueryContextWithMacro _context) {
    return SNodeOperations.copyNode(SLinkOperations.getTarget(SNodeOperations.cast(TypeChecker.getInstance().getTypeOf(_context.getNode()), "TasksAndSyncs.structure.TaskType"), "returnType", true));
  }

  public static SNode insertMacro_Query_3074299910027075177(final IOperationContext operationContext, final TemplateQueryContextWithMacro _context) {
    return SLinkOperations.getTarget(_context.getNode(), "expression", true);
  }
}
