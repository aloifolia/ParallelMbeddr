package TasksAndSyncs.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.BaseHelginsDescriptor;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InequationReplacementRule_Runtime;

public class TypesystemDescriptor extends BaseHelginsDescriptor {
  public TypesystemDescriptor() {
    {
      InferenceRule_Runtime inferenceRule = new typeof_Future_InferenceRule();
      this.myInferenceRules.add(inferenceRule);
    }
    {
      InferenceRule_Runtime inferenceRule = new typeof_FutureContainer_InferenceRule();
      this.myInferenceRules.add(inferenceRule);
    }
    {
      InferenceRule_Runtime inferenceRule = new typeof_Sync_InferenceRule();
      this.myInferenceRules.add(inferenceRule);
    }
    {
<<<<<<< HEAD
      InferenceRule_Runtime inferenceRule = new typeof_Task_InferenceRule();
      this.myInferenceRules.add(inferenceRule);
    }
    {
      InferenceRule_Runtime inferenceRule = new typeof_TaskJoinsk_InferenceRule();
=======
      InferenceRule_Runtime inferenceRule = new typeof_FutureJoinContainer_InferenceRule();
      this.myInferenceRules.add(inferenceRule);
    }
    {
      InferenceRule_Runtime inferenceRule = new typeof_FutureResult_InferenceRule();
      this.myInferenceRules.add(inferenceRule);
    }
    {
      InferenceRule_Runtime inferenceRule = new typeof_FutureResultContainer_InferenceRule();
>>>>>>> 98b7ea7... rest of futures, restructuring is needed
      this.myInferenceRules.add(inferenceRule);
    }
    {
      InferenceRule_Runtime inferenceRule = new typeof_Sync_InferenceRule();
      this.myInferenceRules.add(inferenceRule);
    }
    {
      InferenceRule_Runtime inferenceRule = new typeof_Task_InferenceRule();
      this.myInferenceRules.add(inferenceRule);
    }
    {
      InequationReplacementRule_Runtime eliminationRule = new FutureType_subTypeOf_FutureType_InequationReplacementRule();
      this.myInequationReplacementRules.add(eliminationRule);
    }
    {
      InequationReplacementRule_Runtime eliminationRule = new TaskType_subTypeOf_TaskType_InequationReplacementRule();
      this.myInequationReplacementRules.add(eliminationRule);
    }
  }
}
