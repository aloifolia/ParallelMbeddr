package TasksAndSyncs.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import com.mbeddr.core.statements.behavior.LocalVarScope;
import com.mbeddr.core.statements.behavior.ILocalVarScopeProvider_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;

public class SyncStatement_Behavior {
  public static void init(SNode thisNode) {
  }

  public static Iterable<SNode> virtual_getContainedLocalVariables_2093108837558419581(SNode thisNode) {
    return null;
  }

  public static LocalVarScope virtual_getLocalVarScope_2093108837558189309(SNode thisNode, SNode context, int statementIndex) {
    LocalVarScope scope = new LocalVarScope(ILocalVarScopeProvider_Behavior.call_getContainedLocalVariables_2093108837558419581(thisNode));
    SNode outercScopeProvider = SNodeOperations.getAncestor(thisNode, "com.mbeddr.core.statements.structure.ILocalVarScopeProvider", false, false);
    if (outercScopeProvider != null) {
      scope.setOuterScope(BehaviorReflection.invokeVirtual(LocalVarScope.class, outercScopeProvider, "virtual_getLocalVarScope_2093108837558189309", new Object[]{thisNode, SNodeOperations.getIndexInParent(thisNode)}));
    }
    return scope;
  }
}
