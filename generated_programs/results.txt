xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
xxx pi xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
xxxxxxxxxxxxxxxxxxxxxxxxxxx not optimized xxxxxxxxxxxxxxxx

pi_serial (s: 30000, c: 4000) | (s : 15000, c: 8000) | (s: 60000, c : 2000)
1  4.755 4.870 4.784
2  4.746 4.857 4.801
3  4.805 4.828 4.818
4  4.808 4.763 4.797
5  4.822 4.807 4.797
6  4.858 4.828 4.842
7  4.801 4.842 4.838
8  4.848 4.834 4.835
9  4.803 4.833 4.797
0  4.759 4.794 4.835
=====================================
am 4.801 4.826 4.814
sd 0.038 0.031 0.022
=> im Prinzip alles gleich

pi_no_sync (s: 944882, c: 127) | (s : 60000000, c: 2)
1  2.799 3.037
2  2.816 3.061
3  2.809 3.035
4  2.806 3.011
5  2.812 2.972
6  2.823 2.890
7  2.821 2.990
8  2.807 2.996
9  2.815 3.028
0  2.850 3.008
=====================================
am 2.816 3.003
sd 0.014 0.047
=> kleine Verbesserung bei mehr tasks => mehr Caching? Hyperthreading?
=> ab 128: kein Ende => Höchstgrenze für Threads?

pi_map_reduce_simple (s: 60000, c: 2000, m: 1|2|10|11|12)
1  25.974 44.675 28.630 28.590 36.666
2  24.607 51.671 29.921 29.803 43.818
3  27.392 48.448 27.589 26.940 38.964
4  24.712 48.044 27.819 25.899 32.554
5  25.533 49.067 25.795 23.779 34.522
6  23.960 48.834 29.155 27.105 41.837
7  26.279 46.943 30.030 34.730 37.180
8  23.165 50.076 26.760 27.808 39.696
9  25.371 47.860 25.527 29.396 38.815
0  22.991 46.164 29.278 29.602 36.454
=====================================
am 24.998 48.178 28.050 28.365 38.051
sd  1.392  1.974  1.628  2.911  3.327

pi_map_reduce_simple (s: 30000, c: 4000, m: 1|2|10|11|12)
1  75.544 109.596 58.286 53.729 70.376
2  75.064 106.861 54.799 55.414 74.751
3  73.051 113.064 69.773 51.775 87.438
4  80.720 110.618 56.030 54.833 66.813
5  81.389 111.411 55.109 57.823 72.253
6  77.929 112.786 54.749 54.059 71.170
7  73.973 109.986 52.177 53.848 71.809
8  72.967 109.973 53.913 55.972 80.480
9  77.595 110.080 56.229 53.223 72.326
0  73.506 109.164 56.000 54.200 79.561
======================================
am 76.174 110.354 56.707 54.488 74.698
sd  3.102   1.795  4.862  1.650  6.079
 
pi_map_reduce_simple (s: 15000, c: 8000, m: 1|2|10|11|12)
1  149.534 212.504 114.390 119.796 146.717
2  157.100 222.358 112.869 112.598 140.298
3  150.284 210.367 117.123 114.345 144.318
4  156.430 220.589 113.752 111.490 145.312
5  153.206 223.697 110.873 115.196 145.862
6  156.276 225.446 113.751 113.738 146.882
7  149.989 219.098 121.796 114.361 142.876
8  149.407 219.693 120.734 113.234 136.706
9  154.941 218.988 112.327 113.709 141.361
0  150.408 216.630 116.660 116.062 142.737
==========================================
am 152.758 218.937 115.428 114.453 143.307
sd   3.173   4.716   3.601   2.273   3.213

pi_map_reduce_extended (m: 4|10|20, bs: 100, bc: 2000):
1  13.009 3.905 1.725
2  11.964 3.601 1.741
3  12.770 3.826 1.736
4  13.305 3.934 1.697
5  13.004 4.017 1.721
6  13.016 3.814 1.715
7  13.054 3.767 1.855
8  12.967 3.709 1.779
9  13.306 3.900 1.746
0  12.498 3.744 2.034
===========================================
am 12.889 3.822 1.775
sd  0.401 0.122 0.101

pi_map_reduce_extended (m: 4|10|20, bs: 1000, bc: 200):
1  2.550 1.016 0.747
2  2.553 1.175 0.558
3  2.519 1.152 0.623
4  2.701 1.085 0.676
5  2.570 1.163 0.694
6  2.444 1.160 0.862
7  2.645 1.101 0.668
8  2.575 1.065 0.587
9  2.581 1.250 0.743
0  2.527 1.078 0.722
===========================================
am 2.567 1.125 0.688
sd 0.070 0.068 0.088

optimized:

xxxxxxxxxxxxxxxxxxxxxxxxxxx optimized xxxxxxxxxxxxxxxx
pi_map_reduce_simple (s: 60000, c: 2000, m: 1|2|10|11|12)
1  10.044 16.346 5.324 4.838 11.412
2  10.522 15.906 4.866 5.013 11.686
3  10.423 17.424 5.026 4.290 10.957
4   9.967 16.849 4.983 4.331 11.726
5  10.200 16.973 5.039 5.009 11.730
6  10.928 17.247 5.342 4.760 12.838
7  10.462 16.535 4.908 4.516 11.856
8  10.505 16.253 5.159 4.889 11.576
9  10.580 17.110 5.288 4.748 10.725
0  10.642 16.183 4.916 4.577 11.589
===================================
am 10.427 16.683 5.085 4.697 11.610
sd  0.288  0.509 0.181 0.260  0.563

pi_map_reduce_simple (s: 30000, c: 4000, m: 1|2|10|11|12)
1  24.793 32.900 8.537 7.885 22.605
2  25.960 32.768 8.195 8.292 24.599
3  24.856 33.279 8.524 7.637 22.962
4  24.695 33.513 7.611 8.045 23.521
5  25.723 32.378 8.911 8.268 23.799
6  25.405 34.706 8.920 8.422 24.409
7  25.301 32.864 9.539 8.183 23.543
8  26.490 31.753 9.020 7.978 24.547
9  25.026 32.657 8.951 7.840 24.547
0  25.202 33.384 8.786 7.627 23.676
===================================
am 25.345 33.020 8.699 8.018 23.821
sd  0.570  0.784 0.524 0.274  0.700

pi_map_reduce_simple (s: 15000, c: 8000, m: 1|2|10|11|12)
1  51.637 59.549 17.019 15.071 49.486
2  50.857 58.419 16.002 14.278 47.199
3  50.736 59.019 16.577 16.512 47.356
4  49.530 60.370 16.974 14.356 50.985
5  49.879 59.001 17.762 14.707 47.432
6  50.675 60.684 16.819 15.217 48.823
7  51.065 60.556 17.019 15.395 46.045
8  49.311 59.571 18.043 16.934 50.138
9  50.711 57.398 17.430 16.590 50.996
0  50.868 59.328 17.470 15.949 48.039
=====================================
am 50.527 59.390 17.112 15.501 48.650
sd  0.726  1.014  0.592  0.953  1.710

pi_map_reduce_extended (m: 4|10|20, bs: 100, bc: 2000):
1  13.472 3.677 1.674
2  14.055 3.467 1.722
3  14.245 3.575 1.733
4  13.974 3.588 1.723
5  14.333 3.913 1.669
6  13.687 3.808 1.681
7  14.188 3.849 1.792
8  13.738 3.882 1.686
9  13.909 3.811 1.699
0  13.552 4.199 1.796
===========================================
am 13.915 3.777 1.718
sd  0.297 0.210 0.046

pi_map_reduce_extended (m: 4|10|20, bs: 1000, bc: 200):
1  2.694 0.931 0.434
2  2.782 0.881 0.518
3  2.573 1.180 0.470
4  2.625 1.070 0.435
5  2.721 0.989 0.522
6  2.711 0.900 0.547
7  2.816 1.074 0.551
8  2.926 0.989 0.555
9  2.574 1.022 0.459
0  2.735 1.100 0.466
===========================================
am 2.718 1.014 0.498
sd 0.110 0.095 0.048


xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
xxx quicksort xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
xxxxxxxxxxxxxxxxxxxxxxxxxxx not optimized xxxxxxxxxxxxxxxx

quicksort_serial (i: 200 | 100 | 50, hw: 1000x1000):
1  3.908 1.693 0.720
2  3.907 1.684 0.735
3  3.905 1.699 0.717
4  3.901 1.691 0.722
5  3.925 1.689 0.719
6  3.927 1.692 0.718
7  3.914 1.702 0.717
8  3.932 1.693 0.716
9  3.943 1.693 0.718
0  3.937 1.691 0.729
====================
am 3.920 1.693 0.721
sd 0.015 0.005 0.006


quicksort_broadly (i: 200 | 100 | 50, hw: 1000x1000):
1  3.937 1.708 0.717
2  3.942 1.703 0.719
3  3.948 1.716 0.721
4  3.934 1.700 0.718
5  3.941 1.714 0.717
6  3.961 1.700 0.717
7  3.931 1.706 0.717
8  3.945 1.705 0.718
9  3.952 1.714 0.718
0  3.948 1.701 0.719
====================
am 3.944 1.707 0.718
sd 0.009 0.006 0.001
=> Ergebnisse wie bei serieller Variante

quicksort_narrowly (i: 20000, hw: 100x100 | 50x50 | return) | (i: 200 | 100 | 50, hw: 1000x1000):
1  13.284 8.625 6.781 | 4.350 1.815 0.745
2  13.279 8.596 6.481 | 4.367 1.848 0.769
3  13.316 8.673 6.553 | 4.351 1.818 0.752
4  13.204 8.438 6.530 | 4.365 1.856 0.758
5  13.343 8.755 6.547 | 4.373 1.837 0.764
6  13.389 8.633 6.405 | 4.353 1.812 0.748
7  13.312 8.653 6.632 | 4.362 1.828 0.756
8  13.507 8.554 6.531 | 4.388 1.830 0.755
9  13.381 8.617 6.687 | 4.369 1.841 0.760
0  13.525 8.548 6.723 | 4.358 1.832 0.752
=========================================
am 13.354 8.609 6.587 | 4.364 1.832 0.756
sd  0.101 0.085 0.116 | 0.012 0.014 0.007
=> Schlussfolgerung: Ergebnis hauptsächlich durch Synchronisierung bestimmt

xxxxxxxxxxxxxxxxxxxxxxxxxxx optimized xxxxxxxxxxxxxxxx

quicksort_broadly (i: 200 | 100 | 50, hw: 1000x1000):
1  2.142 1.112 0.719
2  2.144 1.127 0.724
3  2.147 1.119 0.728
4  2.143 1.116 0.724
5  2.127 1.118 0.729
6  2.135 1.117 0.723
7  2.120 1.116 0.724
8  2.148 1.117 0.724
9  2.132 1.109 0.716
0  2.116 1.114 0.719
====================
am 2.135 1.117 0.723
sd 0.011 0.005 0.004
=> Verbesserung, aber erst, wenn wirklich multithreading stattfindet (nicht bei 50)

quicksort_narrowly (i: 20000, hw: 100x100 | 50x50 | return) | (i: 200 | 100 | 50, hw: 1000x1000):
1  3.109 0.803 0.132 | 2.493 1.356 0.736
2  3.198 0.796 0.132 | 2.465 1.360 0.741
3  3.113 0.810 0.132 | 2.477 1.369 0.744
4  3.126 0.810 0.133 | 2.502 1.366 0.742
5  3.133 0.814 0.132 | 2.500 1.380 0.746
6  3.119 0.814 0.134 | 2.480 1.358 0.738
7  3.121 0.810 0.131 | 2.500 1.368 0.742
8  3.124 0.811 0.131 | 2.485 1.369 0.745
9  3.119 0.814 0.132 | 2.489 1.363 0.745
0  3.128 0.807 0.135 | 2.487 1.363 0.753
========================================
am 3.129 0.809 0.132 | 2.488 1.365 0.743
sd 0.025 0.006 0.001 | 0.012 0.007 0.005
=> ohne Synchronisierung Ergebnisse wie erwartet